package main

import (
	"fmt"
	"github.com/digital-technology-agency/secret-santa/pkg/services"
	tgbot "github.com/go-telegram-bot-api/telegram-bot-api/v5"
	"log"
	"os"
)

var (
	keyboard = tgbot.NewInlineKeyboardMarkup(
		tgbot.NewInlineKeyboardRow(
			tgbot.NewInlineKeyboardButtonData("üéÖüèª –°–ø–∏—Å–æ–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤", services.CmdLayerListGame),
			tgbot.NewInlineKeyboardButtonData("üéÑ –•–æ—á—É –≤ –∏–≥—Ä—É", services.CmdJoinGame),
			tgbot.NewInlineKeyboardButtonData("‚ùå –í—ã—Ö–æ–¥ –∏–∑ –∏–≥—Ä—ã", services.CmdExitGame),
			tgbot.NewInlineKeyboardButtonData("üåê –í—ã–±–æ—Ä —è–∑—ã–∫–∞", services.CmdLanguageGame),
		),
	)
)

func main() {
	bot, err := tgbot.NewBotAPI(os.Getenv("TG_BOT_TOKEN"))
	if err != nil {
		log.Panic(err)
	}
	bot.Debug = true
	update := tgbot.NewUpdate(0)
	update.Timeout = 60
	updatesChan := bot.GetUpdatesChan(update)
	for update := range updatesChan {
		if update.Message != nil {
			msgText := update.Message.Text
			if services.InitGameRegex.MatchString(msgText) {
				msg := tgbot.NewMessage(update.Message.Chat.ID, "–í—ã –º–æ–∂–µ—Ç –ø—Ä–∏–Ω—è—Ç—å —É—á–∞—Å—Ç–∏–µ –≤ –∏–≥—Ä–µ")
				msg.ReplyMarkup = keyboard
				if _, err := bot.Send(msg); err != nil {
					log.Panic(err)
				}
			}
		} else if update.CallbackQuery != nil {
			var msgConfig tgbot.MessageConfig
			cmd := update.CallbackQuery.Data
			lastName := update.CallbackQuery.Message.Chat.FirstName
			switch cmd {
			default:
				log.Panicf("Cmd:[%s] - not found", cmd)
			case services.CmdLayerListGame:
				msgConfig = tgbot.NewMessage(update.CallbackQuery.Message.Chat.ID, fmt.Sprintf("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å %s - –∑–∞–ø—Ä–æ—Å–∏–ª —Å–ø–∏—Å–æ–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –∏–≥—Ä—ã!", lastName))
			case services.CmdJoinGame:
				msgConfig = tgbot.NewMessage(update.CallbackQuery.Message.Chat.ID, fmt.Sprintf("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å %s - –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è –∫ –∏–≥—Ä–µ!", lastName))
			case services.CmdExitGame:
				msgConfig = tgbot.NewMessage(update.CallbackQuery.Message.Chat.ID, fmt.Sprintf("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å %s - –≤—ã—à–µ–ª –∏–∑ –∏–≥—Ä—ã!", lastName))
			case services.CmdLanguageGame:
				msgConfig = tgbot.NewMessage(update.CallbackQuery.Message.Chat.ID, fmt.Sprintf("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å %s - –∏–∑–º–µ–Ω–∏–ª —è–∑—ã–∫ –∏–≥—Ä—ã!", lastName))
			}
			if msgConfig.Text == "" {
				continue
			}
			if _, err := bot.Send(msgConfig); err != nil {
				log.Panic(err)
			}
		}
	}
}
